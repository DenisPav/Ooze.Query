name: Build, Test and Bump package version

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Run tests
        run: dotnet test ./tests/Ooze.Query.Tests/Ooze.Query.Tests.csproj
      - name: Bump version
        id: bump
        shell: pwsh
        run: |
          $xml = [Xml] (Get-Content .\src\Ooze.Query\Ooze.Query.csproj)
          $version = [Version] $xml.Project.PropertyGroup.Version
          $newVersion = "{0}.{1}.{2}" -f $version.Major, $version.Minor, ($version.Build + 1)
          $xml.Project.PropertyGroup.Version = $newVersion
          $xml.Save("./src/Ooze.Query/Ooze.Query.csproj")
          echo "::set-output name=newVersion::$newVersion"
      - name: Commit changes
        run: |
          git status
          git config user.name "ooze"
          git config user.email "ooze@users.noreply.github.com"
          git add ./src/Ooze.Query/Ooze.Query.csproj
          git commit -m "Bump project version to ${{ steps.bump.outputs.newVersion }}"
          git tag -a ${{ steps.bump.outputs.newVersion }} -m "Version ${{ steps.bump.outputs.newVersion }}"
          git push
      - name: Create latest package
        run: |
          cd ./src/Ooze.Query
          dotnet pack -c Release -o pkg
      - name: Add nuget source
        run: dotnet nuget add source https://nuget.pkg.github.com/DenisPav/index.json -u DenisPav -p ${OOZE_TOKEN} --store-password-in-clear-text
        env:
          OOZE_TOKEN: ${{ secrets.OozeToken }}
      - name: Push package to GitHub registry
        run: dotnet nuget push ./src/Ooze.Query/pkg/*.nupkg -k ${OOZE_TOKEN} -s https://nuget.pkg.github.com/DenisPav/index.json --skip-duplicate --no-symbols
        env:
          OOZE_TOKEN: ${{ secrets.OozeToken }}
